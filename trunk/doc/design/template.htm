<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <link REL="stylesheet" TYPE="text/css" href="css/style.css">
        <script type="text/javascript" src="scripts/jquery.js">
        </script>
        <script type="text/javascript">
            $(document).ready(function(){
                $(".opinion h1").click(function(){
                    $(this).next().slideToggle("fast");
                    $(this).toggleClass("collapsed");
                    return false;
                });
            });
        </script>
        <title>MyJava - my experience</title>
    </head>
    <body>
        <div class="content">
            <div class="topContent">
                <div class="menu">
                    <ul>
                        <li>
                            <a href="">Home</a>
                        </li>
                        <li>
                            <a href="">Articles</a>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="mainContent">
                <div class="article">
                    <h1>Creating web applications using Maven, Spring, Hibernate</h1>
                    <p>
                        Java applications (a loose term which runs the gamut from constrained applets to full-fledged n-tier server-side enterprise applications) typically are composed of a number of objects that collaborate with one another to form the application proper. The objects in an application can thus be said to have dependencies between themselves.
                        The Java language and platform provides a wealth of functionality for architecting and building applications, ranging all the way from the very basic building blocks of primitive types and classes (and the means to define new classes), to rich full-featured application servers and web frameworks. One area that is decidedly conspicuous by its absence is any means of taking the basic building blocks and composing them into a coherent whole; this area has typically been left to the purvey of the architects and developers tasked with building an application (or applications). Now to be fair, there are a number of design patterns devoted to the business of composing the various classes and object instances that makeup an all-singing, all-dancing application. Design patterns such as Factory, Abstract Factory, Builder, Decorator, and Service Locator (to name but a few) have widespread recognition and acceptance within the software development industry (presumably that is why these patterns have been formalized as patterns in the first place). This is all very well, but these patterns are just that: best practices given a name, typically together with a description of what the pattern does, where the pattern is typically best applied, the problems that the application of the pattern addresses, and so forth. Notice that the last paragraph used the	phrase �... a description of what the pattern does...�; pattern books and wikis are typically listings of such formalized best practice that you can certainly take away, mull over, and then implement yourself in your application.
                        The IoC component of the Spring Framework addresses the enterprise concern of taking the classes, objects, and services that are to compose an application, by providing a formalized means of composing these various disparate components into a fully working application ready for use. The Spring Framework takes best practices that have been proven over the years in numerous applications and formalized as design patterns, and actually codifies these patterns as first class objects that you as an architect and developer can take away and integrate into your own application(s). This is a Very Good Thing Indeed as attested to by the numerous organizations and institutions that have used the Spring Framework to engineer robust, maintainable applications.
                    </p>
                </div>
                <div>
                	<div class="articleListTitle">Доступные статьи</div>
                    <ul class="articleList">
                        <li>
                            <a href="">Creating web applications using Maven, Spring, Hibernate</a>
                        </li>
                    </ul>
                </div>
                <div class="opinions">
                    <div class="opinion">
                        <h1>Bogoliy Sasha wrote: </h1>
                        <div id="opinionText">
                            <p>
                                This is good article
                            </p>
                        </div>
                    </div>
                    <div class="opinion">
                        <h1>Kuzmenko Denis wrote: </h1>
                        <div id="opinionText">
                            <p>
                                Not bad
                            </p>
                        </div>
                    </div>
                </div>
                <div class="opinionForm">
                    <form method="post">
                        <span class="label">Name:</span>
                        <br/>
                        <input name="name" id="name" class="input" type= "text" />
                        <br/>
                        <span class="label">E-mail:</span>
                        <br/>
                        <input name="email" id="email" class="input" type= "text" />
                        <br/>
                        <span class="label">Opinion:</span>
                        <br/>
                        <textarea name="opinion" id="opinion" class="input" cols="60" rows="5">
                        </textarea>
                        <br/>
                        <input class="submit" type="submit" />
                    </form>
                    <br>
                </div>
            </div>
            <div class="bottomContent">
                Created by Bogoliy Sasha
            </div>
        </div>
    </body>
</html>
